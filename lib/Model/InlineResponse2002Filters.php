<?php
/**
 * InlineResponse2002Filters
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PAPI
 *
 * <center>                         <img src=\"https://img.cdn.level.travel/assets/logo/vector-58a947fae5d47fa53329be95ff9cff853e8889f70ac61fc2d2b6572a5998330e.svg\">                         <br><br>                         <h1>Партнёрская документация Open API</h1>                       </center>
 *
 * OpenAPI spec version: 3.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.52
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * InlineResponse2002Filters Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse2002Filters implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_200_2_filters';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'meals' => '\Swagger\Client\Model\InlineResponse2002FiltersMeals[]',
        'regions' => '\Swagger\Client\Model\InlineResponse2002FiltersRegions[]',
        'countries' => 'string',
        'stars' => '\Swagger\Client\Model\InlineResponse2002FiltersStars[]',
        'operators' => '\Swagger\Client\Model\InlineResponse2002FiltersOperators[]',
        'rating' => '\Swagger\Client\Model\InlineResponse2002FiltersRating[]',
        'line' => '\Swagger\Client\Model\InlineResponse2002FiltersLine[]',
        'beach_surface' => '\Swagger\Client\Model\InlineResponse2002FiltersBeachSurface[]',
        'beach_type' => '\Swagger\Client\Model\InlineResponse2002FiltersBeachType[]',
        'wifi' => '\Swagger\Client\Model\InlineResponse2002FiltersWifi[]',
        'category' => 'string',
        'ski_distance' => '\Swagger\Client\Model\InlineResponse2002FiltersSkiDistance[]',
        'prices' => '\Swagger\Client\Model\InlineResponse2002FiltersPrices',
        'lt_extras' => 'string',
        'instant_confirm' => '\Swagger\Client\Model\InlineResponse2002FiltersInstantConfirm[]',
        'fitness' => 'string',
        'aquapark' => '\Swagger\Client\Model\InlineResponse2002FiltersAquapark[]',
        'nanny' => '\Swagger\Client\Model\InlineResponse2002FiltersNanny[]',
        'kids_menu' => '\Swagger\Client\Model\InlineResponse2002FiltersKidsMenu[]',
        'kids_club' => '\Swagger\Client\Model\InlineResponse2002FiltersKidsClub[]',
        'kids_pool' => '\Swagger\Client\Model\InlineResponse2002FiltersKidsPool[]',
        'pool' => '\Swagger\Client\Model\InlineResponse2002FiltersNanny[]',
        'heated_pool' => '\Swagger\Client\Model\InlineResponse2002FiltersKidsPool[]',
        'aircon' => '\Swagger\Client\Model\InlineResponse2002FiltersAircon[]',
        'parking' => '\Swagger\Client\Model\InlineResponse2002FiltersParking[]',
        'massage' => '\Swagger\Client\Model\InlineResponse2002FiltersMassage[]',
        'thermal_fun' => '\Swagger\Client\Model\InlineResponse2002FiltersThermalFun[]',
        'bar' => '\Swagger\Client\Model\InlineResponse2002FiltersBar[]',
        'ski_in' => '\Swagger\Client\Model\InlineResponse2002FiltersSkiIn[]',
        'ski_out' => '\Swagger\Client\Model\InlineResponse2002FiltersSkiIn[]',
        'free_cancel' => 'string',
        'indoor_pool' => 'string',
        'no_single_men' => '\Swagger\Client\Model\InlineResponse2002FiltersInstantConfirm[]',
        'payment_benefits' => '\Swagger\Client\Model\InlineResponse2002FiltersPaymentBenefits[]',
        'travel_benefits' => '\Swagger\Client\Model\InlineResponse2002FiltersTravelBenefits[]',
        'adults_only' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'meals' => null,
        'regions' => null,
        'countries' => 'nullable',
        'stars' => null,
        'operators' => null,
        'rating' => null,
        'line' => null,
        'beach_surface' => null,
        'beach_type' => null,
        'wifi' => null,
        'category' => 'nullable',
        'ski_distance' => null,
        'prices' => null,
        'lt_extras' => 'nullable',
        'instant_confirm' => null,
        'fitness' => 'nullable',
        'aquapark' => null,
        'nanny' => null,
        'kids_menu' => null,
        'kids_club' => null,
        'kids_pool' => null,
        'pool' => null,
        'heated_pool' => null,
        'aircon' => null,
        'parking' => null,
        'massage' => null,
        'thermal_fun' => null,
        'bar' => null,
        'ski_in' => null,
        'ski_out' => null,
        'free_cancel' => 'nullable',
        'indoor_pool' => 'nullable',
        'no_single_men' => null,
        'payment_benefits' => null,
        'travel_benefits' => null,
        'adults_only' => 'nullable'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'meals' => 'meals',
        'regions' => 'regions',
        'countries' => 'countries',
        'stars' => 'stars',
        'operators' => 'operators',
        'rating' => 'rating',
        'line' => 'line',
        'beach_surface' => 'beach_surface',
        'beach_type' => 'beach_type',
        'wifi' => 'wifi',
        'category' => 'category',
        'ski_distance' => 'ski_distance',
        'prices' => 'prices',
        'lt_extras' => 'lt_extras',
        'instant_confirm' => 'instant_confirm',
        'fitness' => 'fitness',
        'aquapark' => 'aquapark',
        'nanny' => 'nanny',
        'kids_menu' => 'kids_menu',
        'kids_club' => 'kids_club',
        'kids_pool' => 'kids_pool',
        'pool' => 'pool',
        'heated_pool' => 'heated_pool',
        'aircon' => 'aircon',
        'parking' => 'parking',
        'massage' => 'massage',
        'thermal_fun' => 'thermal_fun',
        'bar' => 'bar',
        'ski_in' => 'ski_in',
        'ski_out' => 'ski_out',
        'free_cancel' => 'free_cancel',
        'indoor_pool' => 'indoor_pool',
        'no_single_men' => 'no_single_men',
        'payment_benefits' => 'payment_benefits',
        'travel_benefits' => 'travel_benefits',
        'adults_only' => 'adults_only'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'meals' => 'setMeals',
        'regions' => 'setRegions',
        'countries' => 'setCountries',
        'stars' => 'setStars',
        'operators' => 'setOperators',
        'rating' => 'setRating',
        'line' => 'setLine',
        'beach_surface' => 'setBeachSurface',
        'beach_type' => 'setBeachType',
        'wifi' => 'setWifi',
        'category' => 'setCategory',
        'ski_distance' => 'setSkiDistance',
        'prices' => 'setPrices',
        'lt_extras' => 'setLtExtras',
        'instant_confirm' => 'setInstantConfirm',
        'fitness' => 'setFitness',
        'aquapark' => 'setAquapark',
        'nanny' => 'setNanny',
        'kids_menu' => 'setKidsMenu',
        'kids_club' => 'setKidsClub',
        'kids_pool' => 'setKidsPool',
        'pool' => 'setPool',
        'heated_pool' => 'setHeatedPool',
        'aircon' => 'setAircon',
        'parking' => 'setParking',
        'massage' => 'setMassage',
        'thermal_fun' => 'setThermalFun',
        'bar' => 'setBar',
        'ski_in' => 'setSkiIn',
        'ski_out' => 'setSkiOut',
        'free_cancel' => 'setFreeCancel',
        'indoor_pool' => 'setIndoorPool',
        'no_single_men' => 'setNoSingleMen',
        'payment_benefits' => 'setPaymentBenefits',
        'travel_benefits' => 'setTravelBenefits',
        'adults_only' => 'setAdultsOnly'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'meals' => 'getMeals',
        'regions' => 'getRegions',
        'countries' => 'getCountries',
        'stars' => 'getStars',
        'operators' => 'getOperators',
        'rating' => 'getRating',
        'line' => 'getLine',
        'beach_surface' => 'getBeachSurface',
        'beach_type' => 'getBeachType',
        'wifi' => 'getWifi',
        'category' => 'getCategory',
        'ski_distance' => 'getSkiDistance',
        'prices' => 'getPrices',
        'lt_extras' => 'getLtExtras',
        'instant_confirm' => 'getInstantConfirm',
        'fitness' => 'getFitness',
        'aquapark' => 'getAquapark',
        'nanny' => 'getNanny',
        'kids_menu' => 'getKidsMenu',
        'kids_club' => 'getKidsClub',
        'kids_pool' => 'getKidsPool',
        'pool' => 'getPool',
        'heated_pool' => 'getHeatedPool',
        'aircon' => 'getAircon',
        'parking' => 'getParking',
        'massage' => 'getMassage',
        'thermal_fun' => 'getThermalFun',
        'bar' => 'getBar',
        'ski_in' => 'getSkiIn',
        'ski_out' => 'getSkiOut',
        'free_cancel' => 'getFreeCancel',
        'indoor_pool' => 'getIndoorPool',
        'no_single_men' => 'getNoSingleMen',
        'payment_benefits' => 'getPaymentBenefits',
        'travel_benefits' => 'getTravelBenefits',
        'adults_only' => 'getAdultsOnly'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['meals'] = isset($data['meals']) ? $data['meals'] : null;
        $this->container['regions'] = isset($data['regions']) ? $data['regions'] : null;
        $this->container['countries'] = isset($data['countries']) ? $data['countries'] : null;
        $this->container['stars'] = isset($data['stars']) ? $data['stars'] : null;
        $this->container['operators'] = isset($data['operators']) ? $data['operators'] : null;
        $this->container['rating'] = isset($data['rating']) ? $data['rating'] : null;
        $this->container['line'] = isset($data['line']) ? $data['line'] : null;
        $this->container['beach_surface'] = isset($data['beach_surface']) ? $data['beach_surface'] : null;
        $this->container['beach_type'] = isset($data['beach_type']) ? $data['beach_type'] : null;
        $this->container['wifi'] = isset($data['wifi']) ? $data['wifi'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['ski_distance'] = isset($data['ski_distance']) ? $data['ski_distance'] : null;
        $this->container['prices'] = isset($data['prices']) ? $data['prices'] : null;
        $this->container['lt_extras'] = isset($data['lt_extras']) ? $data['lt_extras'] : null;
        $this->container['instant_confirm'] = isset($data['instant_confirm']) ? $data['instant_confirm'] : null;
        $this->container['fitness'] = isset($data['fitness']) ? $data['fitness'] : null;
        $this->container['aquapark'] = isset($data['aquapark']) ? $data['aquapark'] : null;
        $this->container['nanny'] = isset($data['nanny']) ? $data['nanny'] : null;
        $this->container['kids_menu'] = isset($data['kids_menu']) ? $data['kids_menu'] : null;
        $this->container['kids_club'] = isset($data['kids_club']) ? $data['kids_club'] : null;
        $this->container['kids_pool'] = isset($data['kids_pool']) ? $data['kids_pool'] : null;
        $this->container['pool'] = isset($data['pool']) ? $data['pool'] : null;
        $this->container['heated_pool'] = isset($data['heated_pool']) ? $data['heated_pool'] : null;
        $this->container['aircon'] = isset($data['aircon']) ? $data['aircon'] : null;
        $this->container['parking'] = isset($data['parking']) ? $data['parking'] : null;
        $this->container['massage'] = isset($data['massage']) ? $data['massage'] : null;
        $this->container['thermal_fun'] = isset($data['thermal_fun']) ? $data['thermal_fun'] : null;
        $this->container['bar'] = isset($data['bar']) ? $data['bar'] : null;
        $this->container['ski_in'] = isset($data['ski_in']) ? $data['ski_in'] : null;
        $this->container['ski_out'] = isset($data['ski_out']) ? $data['ski_out'] : null;
        $this->container['free_cancel'] = isset($data['free_cancel']) ? $data['free_cancel'] : null;
        $this->container['indoor_pool'] = isset($data['indoor_pool']) ? $data['indoor_pool'] : null;
        $this->container['no_single_men'] = isset($data['no_single_men']) ? $data['no_single_men'] : null;
        $this->container['payment_benefits'] = isset($data['payment_benefits']) ? $data['payment_benefits'] : null;
        $this->container['travel_benefits'] = isset($data['travel_benefits']) ? $data['travel_benefits'] : null;
        $this->container['adults_only'] = isset($data['adults_only']) ? $data['adults_only'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets meals
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersMeals[]
     */
    public function getMeals()
    {
        return $this->container['meals'];
    }

    /**
     * Sets meals
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersMeals[] $meals meals
     *
     * @return $this
     */
    public function setMeals($meals)
    {
        $this->container['meals'] = $meals;

        return $this;
    }

    /**
     * Gets regions
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersRegions[]
     */
    public function getRegions()
    {
        return $this->container['regions'];
    }

    /**
     * Sets regions
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersRegions[] $regions regions
     *
     * @return $this
     */
    public function setRegions($regions)
    {
        $this->container['regions'] = $regions;

        return $this;
    }

    /**
     * Gets countries
     *
     * @return string
     */
    public function getCountries()
    {
        return $this->container['countries'];
    }

    /**
     * Sets countries
     *
     * @param string $countries countries
     *
     * @return $this
     */
    public function setCountries($countries)
    {
        $this->container['countries'] = $countries;

        return $this;
    }

    /**
     * Gets stars
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersStars[]
     */
    public function getStars()
    {
        return $this->container['stars'];
    }

    /**
     * Sets stars
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersStars[] $stars stars
     *
     * @return $this
     */
    public function setStars($stars)
    {
        $this->container['stars'] = $stars;

        return $this;
    }

    /**
     * Gets operators
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersOperators[]
     */
    public function getOperators()
    {
        return $this->container['operators'];
    }

    /**
     * Sets operators
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersOperators[] $operators operators
     *
     * @return $this
     */
    public function setOperators($operators)
    {
        $this->container['operators'] = $operators;

        return $this;
    }

    /**
     * Gets rating
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersRating[]
     */
    public function getRating()
    {
        return $this->container['rating'];
    }

    /**
     * Sets rating
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersRating[] $rating rating
     *
     * @return $this
     */
    public function setRating($rating)
    {
        $this->container['rating'] = $rating;

        return $this;
    }

    /**
     * Gets line
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersLine[]
     */
    public function getLine()
    {
        return $this->container['line'];
    }

    /**
     * Sets line
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersLine[] $line line
     *
     * @return $this
     */
    public function setLine($line)
    {
        $this->container['line'] = $line;

        return $this;
    }

    /**
     * Gets beach_surface
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersBeachSurface[]
     */
    public function getBeachSurface()
    {
        return $this->container['beach_surface'];
    }

    /**
     * Sets beach_surface
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersBeachSurface[] $beach_surface beach_surface
     *
     * @return $this
     */
    public function setBeachSurface($beach_surface)
    {
        $this->container['beach_surface'] = $beach_surface;

        return $this;
    }

    /**
     * Gets beach_type
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersBeachType[]
     */
    public function getBeachType()
    {
        return $this->container['beach_type'];
    }

    /**
     * Sets beach_type
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersBeachType[] $beach_type beach_type
     *
     * @return $this
     */
    public function setBeachType($beach_type)
    {
        $this->container['beach_type'] = $beach_type;

        return $this;
    }

    /**
     * Gets wifi
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersWifi[]
     */
    public function getWifi()
    {
        return $this->container['wifi'];
    }

    /**
     * Sets wifi
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersWifi[] $wifi wifi
     *
     * @return $this
     */
    public function setWifi($wifi)
    {
        $this->container['wifi'] = $wifi;

        return $this;
    }

    /**
     * Gets category
     *
     * @return string
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param string $category category
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets ski_distance
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersSkiDistance[]
     */
    public function getSkiDistance()
    {
        return $this->container['ski_distance'];
    }

    /**
     * Sets ski_distance
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersSkiDistance[] $ski_distance ski_distance
     *
     * @return $this
     */
    public function setSkiDistance($ski_distance)
    {
        $this->container['ski_distance'] = $ski_distance;

        return $this;
    }

    /**
     * Gets prices
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersPrices
     */
    public function getPrices()
    {
        return $this->container['prices'];
    }

    /**
     * Sets prices
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersPrices $prices prices
     *
     * @return $this
     */
    public function setPrices($prices)
    {
        $this->container['prices'] = $prices;

        return $this;
    }

    /**
     * Gets lt_extras
     *
     * @return string
     */
    public function getLtExtras()
    {
        return $this->container['lt_extras'];
    }

    /**
     * Sets lt_extras
     *
     * @param string $lt_extras lt_extras
     *
     * @return $this
     */
    public function setLtExtras($lt_extras)
    {
        $this->container['lt_extras'] = $lt_extras;

        return $this;
    }

    /**
     * Gets instant_confirm
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersInstantConfirm[]
     */
    public function getInstantConfirm()
    {
        return $this->container['instant_confirm'];
    }

    /**
     * Sets instant_confirm
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersInstantConfirm[] $instant_confirm instant_confirm
     *
     * @return $this
     */
    public function setInstantConfirm($instant_confirm)
    {
        $this->container['instant_confirm'] = $instant_confirm;

        return $this;
    }

    /**
     * Gets fitness
     *
     * @return string
     */
    public function getFitness()
    {
        return $this->container['fitness'];
    }

    /**
     * Sets fitness
     *
     * @param string $fitness fitness
     *
     * @return $this
     */
    public function setFitness($fitness)
    {
        $this->container['fitness'] = $fitness;

        return $this;
    }

    /**
     * Gets aquapark
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersAquapark[]
     */
    public function getAquapark()
    {
        return $this->container['aquapark'];
    }

    /**
     * Sets aquapark
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersAquapark[] $aquapark aquapark
     *
     * @return $this
     */
    public function setAquapark($aquapark)
    {
        $this->container['aquapark'] = $aquapark;

        return $this;
    }

    /**
     * Gets nanny
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersNanny[]
     */
    public function getNanny()
    {
        return $this->container['nanny'];
    }

    /**
     * Sets nanny
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersNanny[] $nanny nanny
     *
     * @return $this
     */
    public function setNanny($nanny)
    {
        $this->container['nanny'] = $nanny;

        return $this;
    }

    /**
     * Gets kids_menu
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersKidsMenu[]
     */
    public function getKidsMenu()
    {
        return $this->container['kids_menu'];
    }

    /**
     * Sets kids_menu
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersKidsMenu[] $kids_menu kids_menu
     *
     * @return $this
     */
    public function setKidsMenu($kids_menu)
    {
        $this->container['kids_menu'] = $kids_menu;

        return $this;
    }

    /**
     * Gets kids_club
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersKidsClub[]
     */
    public function getKidsClub()
    {
        return $this->container['kids_club'];
    }

    /**
     * Sets kids_club
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersKidsClub[] $kids_club kids_club
     *
     * @return $this
     */
    public function setKidsClub($kids_club)
    {
        $this->container['kids_club'] = $kids_club;

        return $this;
    }

    /**
     * Gets kids_pool
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersKidsPool[]
     */
    public function getKidsPool()
    {
        return $this->container['kids_pool'];
    }

    /**
     * Sets kids_pool
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersKidsPool[] $kids_pool kids_pool
     *
     * @return $this
     */
    public function setKidsPool($kids_pool)
    {
        $this->container['kids_pool'] = $kids_pool;

        return $this;
    }

    /**
     * Gets pool
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersNanny[]
     */
    public function getPool()
    {
        return $this->container['pool'];
    }

    /**
     * Sets pool
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersNanny[] $pool pool
     *
     * @return $this
     */
    public function setPool($pool)
    {
        $this->container['pool'] = $pool;

        return $this;
    }

    /**
     * Gets heated_pool
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersKidsPool[]
     */
    public function getHeatedPool()
    {
        return $this->container['heated_pool'];
    }

    /**
     * Sets heated_pool
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersKidsPool[] $heated_pool heated_pool
     *
     * @return $this
     */
    public function setHeatedPool($heated_pool)
    {
        $this->container['heated_pool'] = $heated_pool;

        return $this;
    }

    /**
     * Gets aircon
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersAircon[]
     */
    public function getAircon()
    {
        return $this->container['aircon'];
    }

    /**
     * Sets aircon
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersAircon[] $aircon aircon
     *
     * @return $this
     */
    public function setAircon($aircon)
    {
        $this->container['aircon'] = $aircon;

        return $this;
    }

    /**
     * Gets parking
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersParking[]
     */
    public function getParking()
    {
        return $this->container['parking'];
    }

    /**
     * Sets parking
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersParking[] $parking parking
     *
     * @return $this
     */
    public function setParking($parking)
    {
        $this->container['parking'] = $parking;

        return $this;
    }

    /**
     * Gets massage
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersMassage[]
     */
    public function getMassage()
    {
        return $this->container['massage'];
    }

    /**
     * Sets massage
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersMassage[] $massage massage
     *
     * @return $this
     */
    public function setMassage($massage)
    {
        $this->container['massage'] = $massage;

        return $this;
    }

    /**
     * Gets thermal_fun
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersThermalFun[]
     */
    public function getThermalFun()
    {
        return $this->container['thermal_fun'];
    }

    /**
     * Sets thermal_fun
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersThermalFun[] $thermal_fun thermal_fun
     *
     * @return $this
     */
    public function setThermalFun($thermal_fun)
    {
        $this->container['thermal_fun'] = $thermal_fun;

        return $this;
    }

    /**
     * Gets bar
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersBar[]
     */
    public function getBar()
    {
        return $this->container['bar'];
    }

    /**
     * Sets bar
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersBar[] $bar bar
     *
     * @return $this
     */
    public function setBar($bar)
    {
        $this->container['bar'] = $bar;

        return $this;
    }

    /**
     * Gets ski_in
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersSkiIn[]
     */
    public function getSkiIn()
    {
        return $this->container['ski_in'];
    }

    /**
     * Sets ski_in
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersSkiIn[] $ski_in ski_in
     *
     * @return $this
     */
    public function setSkiIn($ski_in)
    {
        $this->container['ski_in'] = $ski_in;

        return $this;
    }

    /**
     * Gets ski_out
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersSkiIn[]
     */
    public function getSkiOut()
    {
        return $this->container['ski_out'];
    }

    /**
     * Sets ski_out
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersSkiIn[] $ski_out ski_out
     *
     * @return $this
     */
    public function setSkiOut($ski_out)
    {
        $this->container['ski_out'] = $ski_out;

        return $this;
    }

    /**
     * Gets free_cancel
     *
     * @return string
     */
    public function getFreeCancel()
    {
        return $this->container['free_cancel'];
    }

    /**
     * Sets free_cancel
     *
     * @param string $free_cancel free_cancel
     *
     * @return $this
     */
    public function setFreeCancel($free_cancel)
    {
        $this->container['free_cancel'] = $free_cancel;

        return $this;
    }

    /**
     * Gets indoor_pool
     *
     * @return string
     */
    public function getIndoorPool()
    {
        return $this->container['indoor_pool'];
    }

    /**
     * Sets indoor_pool
     *
     * @param string $indoor_pool indoor_pool
     *
     * @return $this
     */
    public function setIndoorPool($indoor_pool)
    {
        $this->container['indoor_pool'] = $indoor_pool;

        return $this;
    }

    /**
     * Gets no_single_men
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersInstantConfirm[]
     */
    public function getNoSingleMen()
    {
        return $this->container['no_single_men'];
    }

    /**
     * Sets no_single_men
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersInstantConfirm[] $no_single_men no_single_men
     *
     * @return $this
     */
    public function setNoSingleMen($no_single_men)
    {
        $this->container['no_single_men'] = $no_single_men;

        return $this;
    }

    /**
     * Gets payment_benefits
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersPaymentBenefits[]
     */
    public function getPaymentBenefits()
    {
        return $this->container['payment_benefits'];
    }

    /**
     * Sets payment_benefits
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersPaymentBenefits[] $payment_benefits payment_benefits
     *
     * @return $this
     */
    public function setPaymentBenefits($payment_benefits)
    {
        $this->container['payment_benefits'] = $payment_benefits;

        return $this;
    }

    /**
     * Gets travel_benefits
     *
     * @return \Swagger\Client\Model\InlineResponse2002FiltersTravelBenefits[]
     */
    public function getTravelBenefits()
    {
        return $this->container['travel_benefits'];
    }

    /**
     * Sets travel_benefits
     *
     * @param \Swagger\Client\Model\InlineResponse2002FiltersTravelBenefits[] $travel_benefits travel_benefits
     *
     * @return $this
     */
    public function setTravelBenefits($travel_benefits)
    {
        $this->container['travel_benefits'] = $travel_benefits;

        return $this;
    }

    /**
     * Gets adults_only
     *
     * @return string
     */
    public function getAdultsOnly()
    {
        return $this->container['adults_only'];
    }

    /**
     * Sets adults_only
     *
     * @param string $adults_only adults_only
     *
     * @return $this
     */
    public function setAdultsOnly($adults_only)
    {
        $this->container['adults_only'] = $adults_only;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
